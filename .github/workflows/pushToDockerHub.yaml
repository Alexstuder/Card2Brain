name: test script

on:
  push:
    branches: paused
  workflow_dispatch:

jobs:
  build_and_push:
    name: Build & Push to DockerHub
    runs-on: ubuntu-latest
    env:
      REMOTE_HOST: 167.86.76.193
    steps:
      # Build a Release

      - name: Checkout project
        uses: actions/checkout@v3

      - name: Cache local Maven repository
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - name: Setup Java JDK 17
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 17
          server-id: github
      - name: Configure Git user
        run: |
          git config user.email "categories@card2brain.com"
          git config user.name "Card2Brain User"
      - name: Build Release
        run: mvn -B release:prepare release:perform -Darguments="-Dmaven.deploy.skip=true"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Build a Docker Image and Push to DockerHub
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Build and Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: rojo1/card2brain:latest
      # send docker-compos.yml and init.sql File to remote Host
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts
      - name: Deploy docker-compose.yml with rsync
        run: rsync -avz docker-compose.yml ${{ secrets.DEPLOY_USER }}@$REMOTE_HOST:/home/card2brain
      - name: Deploy init.sql with rsync
        run: rsync -avz db/init.sql ${{ secrets.DEPLOY_USER }}@$REMOTE_HOST:/home/card2brain/mysql-init-files
      - name: Execute test Script
        run: ssh card2brain@$REMOTE_HOST  "docker-compose -f /home/card2brain/docker-compose.yml pull ; docker-compose -f /home/card2brain/docker-compose.yml up -d"
